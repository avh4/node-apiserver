/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['middleware/file-trasport.js']) {
  _$jscoverage['middleware/file-trasport.js'] = [];
  _$jscoverage['middleware/file-trasport.js'][1] = 0;
  _$jscoverage['middleware/file-trasport.js'][5] = 0;
  _$jscoverage['middleware/file-trasport.js'][8] = 0;
  _$jscoverage['middleware/file-trasport.js'][9] = 0;
  _$jscoverage['middleware/file-trasport.js'][14] = 0;
  _$jscoverage['middleware/file-trasport.js'][15] = 0;
  _$jscoverage['middleware/file-trasport.js'][16] = 0;
  _$jscoverage['middleware/file-trasport.js'][17] = 0;
  _$jscoverage['middleware/file-trasport.js'][18] = 0;
  _$jscoverage['middleware/file-trasport.js'][19] = 0;
  _$jscoverage['middleware/file-trasport.js'][21] = 0;
  _$jscoverage['middleware/file-trasport.js'][22] = 0;
  _$jscoverage['middleware/file-trasport.js'][23] = 0;
  _$jscoverage['middleware/file-trasport.js'][24] = 0;
  _$jscoverage['middleware/file-trasport.js'][25] = 0;
  _$jscoverage['middleware/file-trasport.js'][30] = 0;
  _$jscoverage['middleware/file-trasport.js'][31] = 0;
  _$jscoverage['middleware/file-trasport.js'][32] = 0;
  _$jscoverage['middleware/file-trasport.js'][33] = 0;
  _$jscoverage['middleware/file-trasport.js'][34] = 0;
  _$jscoverage['middleware/file-trasport.js'][35] = 0;
  _$jscoverage['middleware/file-trasport.js'][38] = 0;
  _$jscoverage['middleware/file-trasport.js'][39] = 0;
  _$jscoverage['middleware/file-trasport.js'][40] = 0;
  _$jscoverage['middleware/file-trasport.js'][41] = 0;
}
_$jscoverage['middleware/file-trasport.js'][1]++;
var url = require("url"), fs = require("fs"), mime = require("mime");
_$jscoverage['middleware/file-trasport.js'][5]++;
module.exports = (function () {
});
_$jscoverage['middleware/file-trasport.js'][8]++;
module.exports.prototype.attach = (function (request, response) {
  _$jscoverage['middleware/file-trasport.js'][9]++;
  response.serveFile = serveFile.bind(this, request, response);
});
_$jscoverage['middleware/file-trasport.js'][14]++;
function serveFile(request, response, path, params) {
  _$jscoverage['middleware/file-trasport.js'][15]++;
  params = normalizeParams(params);
  _$jscoverage['middleware/file-trasport.js'][16]++;
  fs.stat(path, (function (err, stat) {
  _$jscoverage['middleware/file-trasport.js'][17]++;
  if (err || ! stats.isFile()) {
    _$jscoverage['middleware/file-trasport.js'][18]++;
    response.writeHead(404);
    _$jscoverage['middleware/file-trasport.js'][19]++;
    response.end();
  }
  else {
    _$jscoverage['middleware/file-trasport.js'][21]++;
    fillObject(params.headers, this.standardHeaders);
    _$jscoverage['middleware/file-trasport.js'][22]++;
    params.headers["content-legth"] = stat.size;
    _$jscoverage['middleware/file-trasport.js'][23]++;
    params.headers["content-type"] = mimetypes.getContentTypeFromPath(path);
    _$jscoverage['middleware/file-trasport.js'][24]++;
    response.writeHead(params.httpStatusCode, params.httpStatusMessage, params.headers);
    _$jscoverage['middleware/file-trasport.js'][25]++;
    fs.createReadStream(path, params).pipe(response);
  }
}));
}
_$jscoverage['middleware/file-trasport.js'][30]++;
function normalizeParams(params) {
  _$jscoverage['middleware/file-trasport.js'][31]++;
  params = params || {};
  _$jscoverage['middleware/file-trasport.js'][32]++;
  params.headers = params.headers || {};
  _$jscoverage['middleware/file-trasport.js'][33]++;
  params.httpStatusCode = isNaN(params.httpStatusCode)? 200: params.httpStatusCode;
  _$jscoverage['middleware/file-trasport.js'][34]++;
  params.httpStatusMessage = params.httpStatusMessage || "";
  _$jscoverage['middleware/file-trasport.js'][35]++;
  return params;
}
_$jscoverage['middleware/file-trasport.js'][38]++;
function fillObject(targetObj, fillObj) {
  _$jscoverage['middleware/file-trasport.js'][39]++;
  Object.keys(fillObj).forEach((function (key) {
  _$jscoverage['middleware/file-trasport.js'][40]++;
  if (! targetObj.hasOwnProperty(key)) {
    _$jscoverage['middleware/file-trasport.js'][41]++;
    targetObj[key] = fillObj[key];
  }
}));
}
_$jscoverage['middleware/file-trasport.js'].source = ["var url = require('url'),","    fs = require('fs'),","    mime = require('mime')","","module.exports = function () {","}","","module.exports.prototype.attach = function (request, response) {","  response.serveFile = serveFile.bind(this, request, response)","}","","// private","","function serveFile(request, response, path, params) {","  params = normalizeParams(params)","  fs.stat(path, function (err, stat) {","    if (err || !stats.isFile()) {","      response.writeHead(404)","      response.end()","    } else {","      fillObject(params.headers, this.standardHeaders)","      params.headers['content-legth'] = stat.size","      params.headers['content-type'] = mimetypes.getContentTypeFromPath(path)","      response.writeHead(params.httpStatusCode, params.httpStatusMessage, params.headers)","      fs.createReadStream(path, params).pipe(response)","    }","  })","}","","function normalizeParams (params) {","  params = params || {}","  params.headers = params.headers || {}","  params.httpStatusCode = isNaN(params.httpStatusCode) ? 200 : params.httpStatusCode","  params.httpStatusMessage = params.httpStatusMessage || ''","  return params;","}","","function fillObject (targetObj, fillObj) {","  Object.keys(fillObj).forEach(function (key) {","    if (!targetObj.hasOwnProperty(key)) {","      targetObj[key] = fillObj[key]","    }","  })","}"];
